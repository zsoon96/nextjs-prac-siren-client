import Head from 'next/head'
import {Formik} from "formik";
import {Fragment, useCallback, useState} from "react"

const formatter = Intl.NumberFormat('ko-kr');

const menu = [
    {name: '에스프레소', price: 2900},
    {name: '아메리카노', price: 3200}
]

export default function Home() {
    const [items, setItems] = useState([])
    const addItem = useCallback((name) => {
        // 파라미터로 받은 name으로 menu 리스트에 있는 item.name과 같은 값만 추출해서 setItems에 담아줌
        const item = menu.find(item => name === item.name)
        setItems([...items, item])
    }, [items] )
    return (
        <div className='container'>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>

            <div className='container'>
                <h1 className='mt-4 font-bold text-2xl'>커피 주문</h1>

                <Formik
                    initialValues={{
                        name: ''
                    }}
                    validate={(values) => {
                        const errors = {}
                        if (!values.name) {
                            errors.name = '이름을 입력해주세요.'
                        }
                        return errors
                    }}
                    onSubmit={(values) => {
                        console.log(values)
                    }}>
                    {({
                          values,
                          errors,
                          touched,
                          handleChange,
                          handleBlur,
                          handleSubmit
                      }) => (
                        <form onSubmit={handleSubmit}>
                            <div className='mt-3'>
                                <input type='text' className='form-control'
                                       name='name'
                                       value={values.name}
                                       onChange={handleChange}
                                       onBlur={handleBlur}
                                       placeholder='이름을 입력해주세요.'/>
                                {errors.name && touched.name && <p className='text-danger'>{errors.name}</p>}
                            </div>

                            <dl className="row mt-3">
                                {menu.map(item => (
                                    <Fragment key = {item.name}>
                                        <dt className="col-sm-3">
                                            <label htmlFor='americano'>{item.name}</label>
                                        </dt>
                                        <dd className="col-sm-9">
                                            <div>
                                                {formatter.format(item.price)}원
                                            </div>
                                            <div className='mt-1 mb-3'>
                                                <button type='button' className='btn btn-outline-secondary btn-sm mt-1' onClick={() => addItem(item.name)}>담기</button>
                                            </div>
                                            </dd>
                                    </Fragment>
                                ))}
                            </dl>

                            <hr/>

                            <h2 className='mt-4 mb-2 font-bold text-xl'>주문서</h2>
                            {/* 담은 메뉴가 있을 경우 */}
                            {items.length > 0 && (
                                <dl>
                                    {items.map(item => (
                                        <Fragment key ={item.name}>
                                            <dt>{item.name}</dt>
                                            <dd>{formatter.format(item.price)}</dd>
                                        </Fragment>
                                    ))}
                                </dl>
                            )}
                            {/* 담은 메뉴가 없을 경우 */}
                            {!items.length && (
                                <><p>주문하실 메뉴를 담아주세요!</p></>
                            )}

                            <button type='submit' className='btn btn-info btn-lg mt-4'>주문</button>
                        </form>
                    )}
                </Formik>
            </div>
        </div>
    )
}
